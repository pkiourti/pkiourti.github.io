{"version":3,"sources":["pkiourti.jpg","components/navbar.js","components/imgcard.js","components/intro.js","components/papers.js","Site.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","show_intro","show_papers","goToIntro","goToPapers","className","onClick","ImgCard","goTo","profile","show_icon","style","width","src","href","aria-hidden","Intro","Papers","Site","props","bind","state","this","setState","github","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1e6df3d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pkiourti.30ab4adc.jpg\";","import React from 'react';\n\nconst NavBar = ({ show_intro, show_papers, goToIntro, goToPapers }) => ( \n  <ul className=\"nav nav-tabs justify-content-center\">\n    <li className=\"nav-item\">\n      <a className={show_intro ? \"nav-link active\": \"nav-link\"} onClick={() => goToIntro() }>Intro</a>\n    </li>\n    <li className=\"nav-item\">\n      <a className={show_papers ? \"nav-link active\": \"nav-link\"} onClick={ () => goToPapers() }>Papers</a>\n    </li>\n  </ul>\n);\n\nexport default NavBar;\n","import React from 'react';\n\nconst ImgCard = ({ goTo, profile, show_icon }) => (\n  <div className=\"card\" style={{width: 18 + 'rem'}}>\n    <img src={profile} className=\"card-img-top\"/>\n    <div className=\"card-body rounded mx-auto d-block\">\n      <a className=\"card-link\" href=\"https://scholar.google.com/citations?user=ncU8YRsAAAAJ&hl=el&oi=ao\">\n        <i className=\"ai ai-google-scholar ai-2x\"></i>\n      </a>\n      <a style={{ 'display': (show_icon ? 'block' : 'none') }} className=\"card-link\" href=\"https://github.com/pkiourti/\">\n        <i className=\"fab fa-github fa-2x\" style={{ /*olor: 'black'*/ }} aria-hidden=\"true\"></i>\n      </a>\n      <a className=\"card-link\" href=\"mailto:pkiourti@bu.edu\">\n        <i className=\"fas fa-envelope fa-2x\"></i>\n      </a>\n    </div>\n  </div>\n)\n\nexport default ImgCard;\n","import React from 'react';\n\nconst Intro = ({ show_intro }) => (\n  <div style={{ 'display': show_intro ? 'block' : 'none'}}>\n    <div className=\"heading\">\n      <h1 className=\"name\">Panagiota Kiourti</h1>\n    </div>\n    <div style={{ 'padding': '1ex 1ex 1ex 1ex', 'lineHeight': '3ex' }}>\n      <p className=\"paragraph\">\n        I am a 2nd-year PhD student in the department of Electrical and Computer Engineering at Boston University. I am part of the&nbsp; \n        <a href=\"http://sites.bu.edu/depend/\">Dependable Computing Laboratory</a> \n        &nbsp;where I work with Professor <a href=\"https://www.bu.edu/eng/profile/39799/\">Wenchao Li</a>. \n        My research is primarily on Security of Machine Learning.\n      </p>\n      <p className=\"paragraph\">\n        I completed my undergraduate degree in the&nbsp;\n        <a href=\"https://www.ece.ntua.gr/en\">ECE</a> department of National Technical University of Athens (<a href=\"https://www.ntua.gr/en\">NTUA</a>), Greece where I completed my thesis under the supervision of Professor <a href=\"https://www.ece.ntua.gr/en/staff/60\">Theodora Vargarigou</a>.\n      </p>\n      <p className=\"paragraph\">The correct pronunciation of my name is <span className=\"pronunciation\">Pah-nah-yo-tah</span>, but you can call me <span className=\"nickname_inline\">Penny</span>.</p>\n    </div>\n  </div>\n)\n\nexport default Intro;\n","import React from 'react';\n\nconst Papers = () => (\n  <div className=\"papers\">\n    <a href=\"https://arxiv.org/pdf/1903.06638.pdf\">TrojDRL: Evaluation of Backdoor Attacks on Deep Reinforcement Learning</a>\n    <p>DAC, 2020</p>\n    <p><span className='penny'>Panagiota Kiourti</span>, Kacper Wargeda, Susmit Jha, Wenchao Li</p>\n  </div>\n)\n\nexport default Papers;\n","import React, { Component } from 'react';\nimport { NavBar, ImgCard, Intro, Papers } from './components';\nimport profile from './pkiourti.jpg';\nimport './App.css';\n\nexport default class Site extends Component {\n  constructor(props) {\n    super(props)\n\n    this.goToIntro = this.goToIntro.bind(this)\n    this.state = {\n      show_icon: false,\n      show_intro: true,\n      show_papers: false,\n    }\n  }\n\n  goToIntro() {\n    this.setState({ show_intro: true, show_papers: false })\n  }\n\n  goToPapers() {\n    this.setState({ show_papers: true, show_intro: false })\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar \n          show_intro={this.state.show_intro}\n          show_papers={this.state.show_papers}\n          goToIntro={() => this.goToIntro()}\n          goToPapers={() => this.goToPapers()}\n        />\n        <div className=\"card\" style={{ 'display': this.state.show_intro ? 'block': 'none' }}>\n          <div className=\"card-body\"> \n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <ImgCard \n                    profile={profile} \n                    github={this.state.show_icon}\n                  />\n                </div>\n                <div className=\"col-md-8\">\n                  <Intro show_intro={this.state.show_intro}/>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"card\" style={{ 'display': this.state.show_papers ? 'block': 'none' }}>\n          <div className=\"card-body\"> \n            <div className=\"container\">\n              <h1 className=\"heading\">List of Papers</h1>\n              <Papers />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Site from './Site';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Site />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}